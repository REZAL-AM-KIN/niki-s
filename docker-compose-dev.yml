name: niki-dev

services:
  niki:
    container_name: "niki"
    build: .
    restart: unless-stopped
    ports:
      - "8000:8000"
    networks:
      - external
      - niki-internal
    env_file:
      - .env
    volumes:
      - ./db.sqlite3:/niki/db.sqlite3
    depends_on:
      - rabbitMQ
  celery:
    container_name: "celery"
    build: .
    restart: unless-stopped
    command: celery -A niki worker -l info
    healthcheck:
      test: ["CMD-SHELL", "celery inspect ping --destination celery@$$HOSTNAME"]
      interval: 60s
      timeout: 10s
      retries: 3
      start_period: 5s
    env_file:
      - .env
    environment:
      - CELERY_BROKER_URL=amqp://guest:guest@rabbitMQ:5672
    depends_on:
      rabbitMQ:
        condition: service_started
      niki:
          condition: service_healthy
    networks:
      - niki-internal
  celery-beat:
    container_name: "celery-beat"
    build: .
    restart: unless-stopped
    command: celery -A niki beat -l info --scheduler django_celery_beat.schedulers:DatabaseScheduler
    healthcheck:
      disable: true
    env_file:
      - .env
    environment:
      - CELERY_BROKER_URL=amqp://guest:guest@rabbitMQ:5672
    volumes:
      - ./db.sqlite3:/niki/db.sqlite3
    depends_on:
      rabbitMQ:
        condition: service_started
      niki:
          condition: service_healthy
    networks:
      - niki-internal
  rabbitMQ:
    container_name: "rabbitMQ"
    image: "rabbitmq:3-management"
    restart: unless-stopped
    networks:
      - niki-internal

networks:
  niki-internal:
    driver: bridge
    internal: true
  external:
    driver: bridge